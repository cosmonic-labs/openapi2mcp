name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    # Clone private template repo
    - name: Checkout private repo
      uses: actions/checkout@v5
      with:
        repository: cosmonic-labs/mcp-server-template-ts
        path: tests/fixtures/mcp-server-template-ts
        ref: main
        token: ${{ secrets.COSMONIC_LABS_BOT_PAT }}

    - name: Install rustfmt and clippy
      run: rustup component add rustfmt clippy

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
            
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Run integration tests
      run: cargo test --test integration_tests --verbose
    

    - name: Install Node.js
      uses: actions/setup-node@v5.0.0

    - name: Test examples
      run: |
        cargo run -- -i examples/simple-api.json -o pr-validation/typescript/ci-test-simple -t tests/fixtures/mcp-server-template-ts
        cargo run -- -i examples/weather-api.yaml -o pr-validation/typescript/ci-test-weather -t tests/fixtures/mcp-server-template-ts
        cargo run -- -i examples/ecommerce-api.yaml -o pr-validation/typescript/ci-test-ecommerce -t tests/fixtures/mcp-server-template-ts

    - name: Validate TypeScript projects
      run: |
        for dir in pr-validation/typescript/*/; do
          if [ -d "$dir" ]; then
            echo "Validating TypeScript project: $dir"
            pushd "$dir"
            
            # Install dependencies
            npm install
            
            # Type check
            npx tsc --noEmit
            
            # Return to root
            popd
          fi
        done

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Cache cargo dependencies  
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install Wash
      uses: wasmCloud/setup-wash-action@main

    - name: Build
      run: wash build
